version: '3.8'

services:
  motus1:
    build:
      context: ./motus/.
      dockerfile: Dockerfile
    container_name: "motus1" # Utilisation d'une variable d'environnement pour le port
    ports:
      - "3005:3005"
    volumes:
      - motus_data1:/data
    environment:
      - PORT=3005  # Définir la variable d'environnement PORT avec une valeur par défaut

  motus2:
    build:
      context: ./motus/.
      dockerfile: Dockerfile
    container_name: "motus2" # Utilisation d'une variable d'environnement pour le port
    ports:
      - "3006:3006"
    volumes:
      - motus_data2:/data
    environment:
      - PORT=3006  # Définir la variable d'environnement PORT avec une valeur par défaut
  
  redis_score:
    image: "redis:latest"
    container_name: "redis_score"
    ports:
      - "6379:6379"
    volumes:
      - redis_data_score:/data

  redis_auth:
    image: "redis:latest"
    container_name: "redis_auth"
    ports:
      - "6378:6379"
    volumes:
      - redis_data_auth:/data

  score1:
    depends_on:
      - redis_score
    build:
      context: ./score-motus/.
      dockerfile: Dockerfile
    container_name: "score1"
    ports:
      - "3008:3008"
    volumes:
      - score_motus_data1:/data
    environment:
      - PORT=3008

  score2:
    depends_on:
      - redis_score
    build:
      context: ./score-motus/.
      dockerfile: Dockerfile
    container_name: "score2"
    ports:
      - "3009:3009"
    volumes:
      - score_motus_data2:/data
    environment:
      - PORT=3009

  auth1:
    depends_on:
      - redis_auth
    build:
      context: ./motus-auth/.
      dockerfile: Dockerfile
    container_name: "auth1"
    ports:
      - "3011:3011"
    volumes:
      - motus_auth1:/data
    environment:
      - LOKI=http://loki:3100
      - PORT=3011
  
  auth2:
    depends_on:
      - redis_auth
    build:
      context: ./motus-auth/.
      dockerfile: Dockerfile
    container_name: "auth2"
    ports:
      - "3012:3012"
    volumes:
      - motus_auth2:/data
    environment:
      - LOKI=http://loki:3100
      - PORT=3012


  haproxy:
    depends_on:
      - motus1
      - motus2
    build:
      context: ./haproxy/.
      dockerfile: Dockerfile
    container_name: "haproxy"
    ports:
      - "3101:3101"
      - "3007:3007"
      - "3010:3010"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - 9100:9100

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    ports:
      - 3000:3000
    restart: unless-stopped

  loki:
    image: grafana/loki
    container_name: "loki"
    ports:
      - 3100:3100
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    ports:
      - 9090:9090

networks:
  monitor-net:

volumes:
  motus_data1:
  motus_data2:
  score_motus_data1:
  score_motus_data2:
  motus_auth1:
  motus_auth2:
  redis_data_score:
  redis_data_auth:
  prometheus: